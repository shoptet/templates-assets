// This mixin resets font styles and sets needed styles for custom icons
.shoptet-icon() {
    display: inline-block;
    speak: none;
    vertical-align: middle;
    font-family: shoptet;
    font-style: normal;
    font-weight: normal;
    font-variant: normal;
    line-height: 0;
    text-transform: none;
    text-decoration: none;
}

.appearance(@value) {
    -webkit-appearance: @value;
    -moz-appearance: @value;
    appearance: @value;
}

.list-reset() {
    margin-top: 0;
    margin-bottom: 0;
    padding-left: 0;

    > li {
        list-style: none;
    }
}

.v-align() {
    position: relative;
    top: 50%;
    transform: translateY(-50%);
}

.border(@value, @style) {
    border-width: @value;
    border-style: @style;
}

.js-hidden-hidden() {
    visibility: hidden;
    position: absolute;
    max-height: 0;
    max-width: 0;
    overflow: hidden;
    transform: scaleY(0) scaleX(0);
    transform-origin: center;
    .transition(transform @transition-duration @transition-timing);
    @media (prefers-reduced-motion: reduce) {
        transition: none;
    }
}

.js-hidden-visible() {
    visibility: visible;
    position: inherit;
    max-height: none;
    max-width: none;
    overflow: visible;
    transform: scaleY(1) scaleX(1);
    transform-origin: center;
    .transition(all @transition-duration @transition-timing);
    @media (prefers-reduced-motion: reduce) {
        transition: none;
    }
}

.checkbox-radio-style() {
    &::after,
    &::before {
        content: '';
        position: absolute;
        top: 50%;
        display: block;
        transform: translateY(-50%);
    }
    &::before {
        left: 0;
        .square(@checkbox-outer-width);
        .border(@checkbox-border-width, solid);
        background-color: #fff;
    }
}

.checkbox-radio-checked-style() {
    .square(@checkbox-inner-width);
    .border(@checkbox-border-width, solid);
    left: round((@checkbox-outer-width - @checkbox-inner-width) / 2);
}

.widgetPosition(@element, @breakpoint) {
    @offsetMixin: ~"@{popup_widget_@{element}-offset}";
    @topMixin: ~"@{popup-widget_top-@{breakpoint}-min}";
    @arrowMixin: ~"@{popup-widget_arrow-position-@{element}}";
    @arrowMixinScrolled: ~"@{popup-widget_arrow-position-@{element}-scrolled}";
    @offset: `parseFloat("@{offsetMixin}")`;
    @top: `parseFloat("@{topMixin}")`;
    @arrow: `parseFloat("@{arrowMixin}")`;
    @arrowScrolled: `parseFloat("@{arrowMixinScrolled}")`;

    top: unit(round(@top + @offset), px);
    &::before {
        right: unit(@arrow, px);
    }
    .admin-logged & {
        top: unit(round(@top + @offset + @admin-bar-height), px);
    }
    // Specific for Waltz template
    .scrolled .template-10.admin-logged & {
        top: unit(round(@top + @offset), px);
    }
    .scrolled & {
        &::before {
            right: unit(@arrowScrolled, px);
        }
    }
}

.fixedInformationBanner() {
    position: fixed;
    z-index: @z-higher-base;
    bottom: round(@grid-gutter-width / 2);
    left: round(@grid-gutter-width / 2);
    max-width: calc(~'100% - '  @grid-gutter-width);
    opacity: .90;
    box-shadow: @popup-widget_box-shadow;
}

.propertyValue(@property; @value){
    @{property}: @value;
}

.sr-only() {
    position: absolute;
    width: 1px;
    height: 1px;
    margin: -1px;
    padding: 0;
    overflow: hidden;
    clip: rect(0,0,0,0);
    border: 0;
}

.sr-only-neutralizer() {
    position: relative;
    width: auto;
    height: auto;
    margin: inherit;
    padding: inherit;
    overflow: auto;
    border: none;
    clip: auto;
}

// Same as Bootstrap .clearfix() mixin. Used to avoid duplicates in generated CSS
.clearfixMixin() {
    &:before,
    &:after {
        content: " ";
        display: table;
    }
    &:after {
      clear: both;
    }
}

.text-ellipsis(@lines) {
    display: -webkit-box;
    -webkit-box-orient: vertical;
    overflow: hidden;
    text-overflow: ellipsis;
    -webkit-line-clamp: @lines;
}

// START three types of the next step element used in 3G
.nextStepOneLine() {
    .nextStepCommon();
    .next-step {
        .nextStepColumn();
        @media (min-width: @screen-xs) {
            .nextStepRow();
        }
    }
}
.nextStepCartWithSidebar() {
    .nextStepCommon();
    .next-step {
        .nextStepColumn();
        @media (min-width: @screen-xs) and (max-width: @screen-sm-max) {
            .nextStepRow();
        }
        @media (min-width: @screen-xl-min) {
            .nextStepRow();
        }
    }
}
.nextStepCartWithoutSidebar() {
    .nextStepCommon();
    .next-step {
        .nextStepColumn();
        @media (min-width: @screen-xs) and (max-width: @screen-sm-max) {
            .nextStepRow();
        }
        @media (min-width: @screen-xl-min) {
            // 1st and 2nd step
            .id--16 &,
            .id--17 & {
                .nextStepRow();
            }
        }
        @media (min-width: @screen-md-min) {
            // Cart
            .id--9 & {
                .nextStepRow();
            }
        }
    }
}
// END three types of the next step element used in 3G

// START helper mixins ONLY for use in mixins above
.nextStepColumn() {
    display: flex;
    flex-direction: column-reverse;
    align-items: stretch;
    margin-bottom: @line-height-computed;
    text-align: center;
}

.nextStepRow() {
    flex-direction: row;
    align-items: center;
    justify-content: flex-end;
}

@order-button-suffix-font-size: 14px;
@order-button-line-height: 36px;
@order-button-font-size: 18px;
@order-button-padding-vertical: 10px;
@order-button-padding-horizontal: 20px;
.nextStepCommon() {
    .next-step {
        .btn.btn-lg {
            padding: @order-button-padding-vertical @order-button-padding-horizontal;
            line-height: @order-button-line-height;
        }

        .next-step-back {
            font-size: max(@order-button-suffix-font-size, @btn-font-size);
        }
    }

    .next-step-finish {
        display: flex;
        flex-direction: column;
        align-items: center;
    }
    .order-button-text {
        vertical-align: middle;
        font-size: @order-button-font-size;
        font-weight: normal;
        text-transform: uppercase;
    }
    .order-button-suffix {
        margin-top: -(round((@order-button-line-height - @order-button-suffix-font-size) / 4));
        padding-bottom: round((@order-button-line-height - @order-button-suffix-font-size) / 2);
        font-size: @order-button-suffix-font-size;
        font-weight: normal;
        line-height: @order-button-suffix-font-size;
        text-transform: none;
    }
}
// END helper mixins ONLY for use in mixins above
